Step 1

<a-entity id="header" position="1 -4 0">
</a-entity>

  <!-- Title -->
        <a-entity
          position="-28.5 21.5 0"
          text="font: exo2bold; align: center; width: 40; color: black; value: VIRTUAL FLIGHT"
        ></a-entity>

 <!-- Timer -->
        <a-entity position="-23.5 19.3 0">
          <a-entity
            position="-1.5 0.07 0"
            text="font: aileronsemibold; width: 12; color: black; value: TIME\nREMAINING"
          ></a-entity>
          <a-entity
            id="timer"
            position="-9.8 0.3 0"
            text="font: exo2bold; align: center; width: 30; color: black; value: 00:00"
          ></a-entity>
        </a-entity>
------------------------------------------------------
step 2

In Game.js

init: function () {
    var duration = 120;
    var timerEl = document.querySelector("#timer");
    this.startTimer(duration, timerEl);
  },

 startTimer: function (duration, timerEl) {
}

setInterval(()=> {},1000)

var minutes;
var seconds;

if (minutes < 10) {
          minutes = "0" + minutes;
        }
        if (seconds < 10) {
          seconds = "0" + seconds;
        }

        timerEl.setAttribute("text", {
          value: minutes + ":" + seconds,
        });

        duration -= 1;
      } 
     
-----------------------------------------------------------
Step 3

In Index.html


<!-- Traget Status -->
        <a-entity position="-18 19.3 0">
          <a-entity
            position="-0.6 0.13 0"
            text="font: aileronsemibold; width: 12; color: black; value: TRAGETS\nREMAINING"
          ></a-entity>
          <a-entity
            id="targets"
            position="-8 0.3 0"
            text="font: exo2bold; align: center; width: 30; color: black; value: 20"
          ></a-entity>
        </a-entity>

  <!-- Score -->
        <a-entity position="30.5 21.5 0">
          <a-entity
            position=""
            text="font: exo2bold; align: center; width: 40; color: black; value: SCORE"
          ></a-entity>
          <a-entity
            id="score"
            position="0 -2 0"
            text="font: exo2bold; align: center; width: 40; color: black; value: 0"
          ></a-entity>
        </a-entity>
      </a-entity>
---------------------------------------------------
Step 4

In Game.js

updateTargets: function () {
    var element = document.querySelector("#targets");
    var count = element.getAttribute("text").value;
    var currentTargets = parseInt(count);
    currentTargets -= 1;
    element.setAttribute("text", {
      value: currentTargets,
    });
  },
  updateScore: function () {
    var element = document.querySelector("#score");
    var count = element.getAttribute("text").value;
    var currentScore = parseInt(count);
    currentScore += 50;
    element.setAttribute("text", {
      value: currentScore,
    });
  },

 isCollided: function (elemntId) {
    var element = document.querySelector(elemntId);
    element.addEventListener("collide", (e) => {
      if (elemntId.includes("#ring")) {
        element.setAttribute("visible", false);
        this.updateScore();
        this.updateTargets();
      } 
     
    });
  },
---------------------------------------------------
step 5
In Index.html

 <!------------------------------------Game Over-------------------------------->
      <a-entity
        id="game_over_text"
        position="0 7.5 0"
        text="font: exo2bold; align: center; width: 100; color: white;value: Game Over!!!"
        visible="false"
      ></a-entity>
-----------------------------------------------
step 6
In Game.js

gameOver: function () {
    var planeEl = document.querySelector("#plane_model");
    var element = document.querySelector("#game_over_text");
    element.setAttribute("visible", true);
    planeEl.setAttribute("dynamic-body", {
      mass: 1
    });

In isCollided and setInterval function

 else {
        this.gameOver();
      }



     